# Copyright 2020 Energinet DataHub A/S
#
# Licensed under the Apache License, Version 2.0 (the "License2");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: DH UI Backend CI

env:
  app-name: app-dh
  BASE_BRANCH: ${{ github.event.pull_request.base.ref }}
  is-main-branch: ${{ github.ref == 'refs/heads/main' }}
  is-pull-request: ${{ github.event_name  == 'pull_request' }}
  NODE_OPTIONS: --max-old-space-size=6144
  node-version: 14.x
  NX_MAX_PARALLEL: 2

  # Nx Cloud
  NX_BRANCH: ${{ github.event.number }}
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  NX_RUN_GROUP: ${{ github.run_id }}

on:
  pull_request:
    branches:
      - main
    paths:
      - 'build/infrastructure/dh/**'
      - 'apps/dh/api-dh/**'
      - '.github/workflows/dh-backend-ci.yml'

jobs:
  dotnet_solution_ci:
    uses: Energinet-DataHub/.github/.github/workflows/dotnet-solution-ci.yml@2.8.0
    with:
      SOLUTION_FILE_PATH: 'apps/dh/api-dh/DataHub.WebApi.sln'
      DOTNET_VERSION: '5.0'
    secrets:
      AZURE_TENANT_ID: ${{ secrets.AZURE_TESTING_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_TESTING_SUBSCRIPTION_ID }}
      AZURE_SPN_ID: ${{ secrets.AZURE_TESTING_SPN_ID }}
      AZURE_SPN_SECRET: ${{ secrets.AZURE_TESTING_SPN_SECRET }}
      AZURE_KEYVAULT_URL: ${{ secrets.AZURE_TESTING_KEYVAULT_URL }}

  terraform_validate:
    uses: Energinet-DataHub/.github/.github/workflows/terraform-validate.yml@2.8.0
    with:
      TERRAFORM_WORKING_DIR_PATH: 'build/infrastructure/dh/main'
      TERRAFORM_VERSION: '1.1.2'

  sonarcloud_analysis:
    uses: Energinet-DataHub/.github/.github/workflows/sonarcloud-dotnet.yml@2.8.0
    with:
      SOLUTION_FILE_PATH: 'apps/dh/api-dh/DataHub.WebApi.sln'
      DOTNET_VERSION: '5.0'
      SONAR_CLOUD_ORGANIZATION: 'energinet-datahub'
      SONAR_CLOUD_PROJECT: 'geh-frontend-api'
    secrets:
      SONAR_CLOUD_TOKEN: ${{ secrets.SONAR_TOKEN }}

  bff_ci:
    needs: [dotnet_solution_ci, terraform_validate, sonarcloud_analysis]
    uses: Energinet-DataHub/.github/.github/workflows/dotnet-create-artifact.yml@2.8.0
    with:
      CSPROJ_FILE_PATH: 'apps/dh/api-dh/source/DataHub.WebApi/DataHub.WebApi.csproj'
      DOTNET_VERSION: '5.0.202'
      ARTIFACT_NAME: bff

  generate_client:
    needs: bff_ci
    runs-on: ubuntu-latest
    env:
      output-path: libs/dh/shared/data-access-api/src/lib/generated/v1/

    steps:
      # needed to push to origin
      - name: 'PR: Check out source code with current branch Git history'
        if: ${{ env.is-pull-request == 'true' }}
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
          ssh-key: ${{ secrets.ACTIONS_BOT_SSH_KEY }}
      - name: 'Merge: Check out source code'
        if: ${{ env.is-main-branch == 'true' }}
        uses: actions/checkout@v2

      - name: Set up Node.js ${{ env.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node-version }}

      - name: Variable-Yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache Yarn cache directory
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-node-${{ env.node-version }}-yarn-${{
            hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.node-version }}
            ${{ runner.os }}
      - name: Install package dependencies
        run: yarn install --frozen-lockfile --non-interactive

      - name: Generate API client
        run: yarn nx run api-dh:build-client

      - name: 'PR: Commit generated files'
        if: ${{ env.is-pull-request == 'true' }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add ${{ env.output-path }} || cd .
          git commit -m 'feat(dh): generate DataHub API v1 client' || cd .
          git push origin --force-with-lease || cd .

      - name: 'Merge: Verify no changes'
        if: ${{ env.is-main-branch == 'true' }}
        run: |
          git diff ${{ env.output-path }} --exit-code || (echo '‚ùå DataHub API v1 client is out-of-sync. Run the `build-client` Nx target and merge the changes.' && exit 1)

  create_prerelease:
    needs: [bff_ci]
    uses: Energinet-DataHub/.github/.github/workflows/create-prerelease.yml@2.8.0
    with:
      CALLER_REPOSITORY_PATH: Energinet-DataHub/greenforce-frontend
    secrets:
      PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
