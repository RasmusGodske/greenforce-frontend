# Copyright 2020 Energinet DataHub A/S
#
# Licensed under the Apache License, Version 2.0 (the "License2");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: DataHub BFF CD

on:
  push:
    branches:
      - main
      - renetnielsen/fix-bff-cd
    paths:
      - .github/workflows/api-dh-cd.yml
      - apps/dh/api-dh/**
  workflow_dispatch: {}

env:
  CSPROJ_FILE_PATH: 'apps/dh/api-dh/source/DataHub.WebApi/DataHub.WebApi.csproj'
  SOLUTION_FILE_PATH: 'apps/dh/api-dh/DataHub.WebApi.sln'
  ORGANISATION_NAME: 'endk'
  PROJECT_NAME: dh

jobs:
  build_webapi:
    name: Build WebAPI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@master

      - name: Setup .NET 5.0.202 environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.202'

      - name: test and publish report
        shell: bash
        run: |
          dotnet tool install --tool-path ./temp/reportgenerator dotnet-reportgenerator-globaltool
          dotnet test ${{ env.SOLUTION_FILE_PATH }} --filter Category=Unit /p:CollectCoverage=true /p:CoverletOutput=${{ github.workspace }}/output/ /p:CoverletOutputFormat=cobertura /p:Threshold=0

      - name: Build project
        shell: bash
        run: |
          dotnet build ${{ env.CSPROJ_FILE_PATH }} --configuration Release --output ${{ github.workspace }}/output

      - name: Publish artifact
        uses: actions/upload-artifact@v2
        with:
          name: drop
          path: '${{ github.workspace }}/output'

  deploy_webapi:
    name: Deploy app to rg-DataHub-GUI-U
    needs: build_webapi
    runs-on: ubuntu-latest
    environment:
      name: Development
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: drop
          path: drop

      - name: Set dynamic environment variables
        shell: bash
        run: |
          echo "AZURE_APP_NAME=app-bff-dh-u-001" >> $GITHUB_ENV

      - name: Setup Azure CLI
        shell: bash
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb
          sudo bash
          az login --service-principal --username ${{ secrets.AZURE_SPN_ID }} --password ${{ secrets.AZURE_SPN_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
          az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get app publish profile
        id: get-publish-profile
        run: |
          publish_profile=$(az webapp deployment list-publishing-profiles --name ${{ env.AZURE_APP_NAME }} --resource-group ${{ secrets.AZURE_RG_NAME }} --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }} --xml)
          echo "::set-output name=publish-profile::${publish_profile}"

      - name: Deploy App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_APP_NAME }}
          package: ${{ github.workspace }}/drop
          publish-profile: ${{ steps.get-publish-profile.outputs.publish-profile }}
