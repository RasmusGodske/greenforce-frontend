name: Energy Track and Trace

env:
  app-name: app-ett
  BASE_BRANCH: ${{ github.ref_name }}
  is-main-branch: ${{ github.ref == 'refs/heads/main' }}
  is-pull-request: ${{ github.event.workflow_run.event  == 'pull_request' }}
  is-push-request: ${{ github.event.workflow_run.event  == 'push' }}
  NODE_OPTIONS: --max-old-space-size=6144
  node-version: 14.x
  NX_MAX_PARALLEL: 2

  # Nx Cloud
  NX_BRANCH: ${{ github.event.number }}
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  NX_RUN_GROUP: ${{ github.run_id }}


on:
  workflow_run:
    workflows: ['GreenForce Frontend CI']
    types: [completed]

jobs:
  test:
    name: "test"
    env: 
      GITHUB_CONTEXT: ${{ toJSON(github) }}
      EVENT_NAME: ${{github.event_name}}
    runs-on: ubuntu-latest
    steps:
      - name: "test"
        run: echo "$GITHUB_CONTEXT"
      

  affected:
    name: Is affected?
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    outputs:
      is-affected: ${{ steps.affected.outputs.is-affected }}

    steps:
      # needed for nx affected command
      - name: Check out source code with current branch Git history
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      # needed for nx affected command
      - name: 'PR: Fetch base branch Git history'
        if: ${{ env.is-pull-request == 'true' }}
        run: git fetch --no-tags origin $BASE_BRANCH

      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node-version }}

      - name: Variable-Yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache Yarn cache directory
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-node-${{ env.node-version }}-yarn-${{
            hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.node-version }}
            ${{ runner.os }}
      - name: Disable workspace NGCC run
        uses: ./.github/actions/setup-postinstall
        with:
          ngcc: false
      - name: Install package dependencies
        run: yarn install --frozen-lockfile --non-interactive

      - name: Is affected?
        id: affected
        uses: ./.github/actions/affected
        with:
          base: ${{ env.is-main-branch == 'true' && 'HEAD~1' || format('origin/{0}', env.BASE_BRANCH) }}
          project: ${{ env.app-name }}

  app:
    name: Build app
    if: ${{ needs.affected.outputs.is-affected == 'true' }}
    needs: affected
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js ${{ env.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node-version }}

      - name: Variable-Yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache Yarn cache directory
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-node-${{ env.node-version }}-yarn-${{
            hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.node-version }}
            ${{ runner.os }}
      - name: Disable workspace NGCC run
        uses: ./.github/actions/setup-postinstall
        with:
          ngcc: false
      - name: Install package dependencies
        run: yarn install --frozen-lockfile --non-interactive

      - name: Angular Compatibility Compiler
        run: npm run ngcc:ett

      - name: Production build
        run: yarn nx build ${{ env.app-name }} --max-parallel=$NX_MAX_PARALLEL

      - name: Upload web app build artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.app-name }}
          path: ./dist/apps/ett/${{ env.app-name }}/
          if-no-files-found: error

  container-pr:
    name: 'PR: Host container'
    if: ${{ github.event.workflow_run.event  == 'pull_request' }}
    needs: app
    runs-on: ubuntu-latest
    env:
      host-image-tag: ${{ format('pr-{0}', github.event.pull_request.number) }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: ${{ env.app-name }}
          path: ./dist/apps/ett/${{ env.app-name }}/
      - name: Container image name
        id: image-name
        uses: ASzc/change-string-case-action@v2
        with:
          # TODO(xlgni): coordinate name change to `env.app-name` with Fenris infrastructure
          string: ghcr.io/${{ github.repository }}-ett-app
      - name: Build host container image
        run: docker build ./ --file ./infrastructure/eo/host/Dockerfile --tag ${{ steps.image-name.outputs.lowercase }}:${{ env.host-image-tag }}
      - name: Publish host container image
        run: |
          docker login ghcr.io --username ${{ github.actor }} --password ${{ github.token }}
          docker push ${{ steps.image-name.outputs.lowercase }}:${{ env.host-image-tag }}

  container_merge:
    name: 'Merge: Host container'
    if: ${{ github.ref == 'refs/heads/main' && github.event.workflow_run.event  == 'push' }}
    needs: app
    outputs:
      release_tag: ${{ steps.build_and_push.outputs.RELEASE_VERSION }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: ${{ env.app-name }}
          path: ./dist/apps/ett/${{ env.app-name }}/

      - name: Container image name
        id: image-name
        uses: ASzc/change-string-case-action@v2
        with:
          # TODO(xlgni): coordinate name change to `env.app-name` with Fenris infrastructure
          string: ghcr.io/${{ github.repository }}-ett-app

      - name: Build and Push Docker image
        id: build_and_push
        uses: Energinet-DataHub/.github/.github/actions/docker-build-and-push@9b79b91f1290f69410eed3ad3855cfe04904f01e
        with:
          REGISTRY: ghcr.io
          DOCKER_USERNAME: ${{ github.actor }}
          DOCKER_PASSWORD: ${{ github.token }}
          DOCKER_IMAGE: ${{ steps.image-name.outputs.lowercase }}
          INCLUDE_LATEST_TAG: true
          TAG_VERSION_PREFIX: ''
          TAG_VERSION_SUFFIX: ''
          MAJOR: 0
          MINOR: 0
          PATCH: ${{ github.run_number }}
          FILE: infrastructure/eo/host/Dockerfile

      - uses: 'marvinpinto/action-automatic-releases@919008cf3f741b179569b7a6fb4d8860689ab7f0'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: ${{ steps.build_and_push.outputs.RELEASE_VERSION }}
          prerelease: false
          draft: false
          title: Energy Origin ${{ steps.build_and_push.outputs.RELEASE_VERSION }}

  update_base_env:
    name: Update Base Environment
    runs-on: ubuntu-latest
    needs:
      - container_merge
    env:
      SERVICE_NAME: eo-frontend

      # BASE_ENV_REPO: 'Energinet-DataHub/eo-base-environment'
      BASE_ENV_REPO: 'RasmusGodske/eo-base-environment'
      BASE_ENV_REPO_BRANCH: 'development'
      HELM_CHART_PATH: 'yggdrasil/applications/eo/eo-frontend/eo-frontend.yaml'
      JOB_URL: '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}'

    steps:
      # Check out the base environment
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.EO_PAT }}
          repository: ${{ env.BASE_ENV_REPO }}
          ref: ${{ env.BASE_ENV_REPO_BRANCH }}

      - name: Replace docker tag
        uses: Energinet-DataHub/.github/.github/actions/regex-search-and-replace@731c5e2a1ec807416acc0d4dd3b244621e720bb7
        with:
          FILE_PATH: ${{ env.HELM_CHART_PATH }}
          NEW_VALUE: ${{ needs.container_merge.outputs.release_tag }}
          REGEX_EXPRESSION: '^(?:.*tag: (.*))'

      # Create a new branch and a pull request in the base environment
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.EO_PAT }}
          title: Bump ${{ env.SERVICE_NAME }} to ${{ needs.container_merge.outputs.release_tag }}
          commit-message: Bump ${{ env.SERVICE_NAME }} to ${{ needs.container_merge.outputs.release_tag }}
          committer: GitHub <noreply@github.com>
          branch: 'automated/github_actions/bump-${{ env.SERVICE_NAME }}-version-${{ needs.container_merge.outputs.release_tag }}'
          labels: 'automerge' # Indicates that pull requests may be auto merged
          body: |
            Bump ${{ env.SERVICE_NAME }} to ${{ needs.container_merge.outputs.release_tag }}

            - Triggered by [Job][1] in [Repo][2]

            [1]: ${{ env.JOB_URL }} 
            [2]: ${{ github.server_url }}/${{ github.repository }}
